{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/harrybeckwith/Desktop/learn/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\nimport UserOutput from \"./UserOutput/UserOutput\";\nimport UserInput from \"./UserInput/UserInput\";\nimport ValidationComponent from \"./ValidationComponent/ValidationComponent\";\nimport CharComponent from \"./CharComponent/CharComponent\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 1,\n        name: \"harry\",\n        age: 30\n      }, {\n        id: 2,\n        name: \"garry\",\n        age: 32\n      }, {\n        id: 3,\n        name: \"larry\",\n        age: 38\n      }],\n      userName: \"user one\",\n      show: false,\n      msg: \"\"\n    };\n\n    this.updateUserName = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.nameChange = (event, id) => {\n      // find index of person from state\n      const personIndex = this.state.persons.findIndex(item => item.id === id); // create one person from index found obj\n\n      const person = { ...this.state.persons[personIndex]\n      }; // the name is updated with input value\n\n      person.name = event.target.value; // copying all persons state\n\n      const persons = [...this.state.persons]; // updating the found index with new person\n\n      persons[personIndex] = person;\n      console.log(persons); // update state\n\n      this.setState({\n        persons\n      });\n    };\n\n    this.toggle = () => {\n      const doesShow = this.state.show;\n      this.setState({\n        show: !doesShow\n      });\n    };\n\n    this.deletePerson = personIndex => {\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons\n      });\n    };\n\n    this.inputLength = event => {\n      this.setState({\n        msg: event.target.value\n      });\n    };\n\n    this.deleteChar = charIndex => {\n      console.log(charIndex);\n      const r = [...this.state.msg]; // remove index\n\n      r.splice(charIndex, 1);\n      let msg = r.join(\"\");\n      this.setState({\n        msg\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: \"white\",\n      \":hover\": {\n        backgroundColor: \"orange\"\n      }\n    };\n    let persons = null;\n\n    if (this.state.show) {\n      persons = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.persons.map((person, i) => {\n          return /*#__PURE__*/_jsxDEV(Person, {\n            click: () => this.deletePerson(i),\n            name: person.name,\n            age: person.age,\n            change: event => this.nameChange(event, person.id)\n          }, person.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n      style[\":hover\"] = {\n        backgroundColor: \"green\",\n        color: \"white\"\n      };\n    }\n\n    let characters = null;\n\n    if (this.state.msg) {\n      characters = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.msg.split(\"\").map((char, i) => {\n          return /*#__PURE__*/_jsxDEV(CharComponent, {\n            char: char,\n            click: () => this.deleteChar(i)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this);\n    }\n\n    let classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push(\"red\");\n    }\n\n    if (this.state.persons.length <= 1) {\n      classes.push(\"bold\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.join(\" \"),\n        children: \"working\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => this.inputLength(event),\n        value: this.state.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), this.state.msg, characters, /*#__PURE__*/_jsxDEV(ValidationComponent, {\n        msg: this.state.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UserOutput, {\n        userName: this.state.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n        change: this.updateUserName,\n        userName: this.state.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggle,\n        style: style,\n        children: \"toggle div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), persons]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/harrybeckwith/Desktop/learn/src/App.js"],"names":["React","Person","UserOutput","UserInput","ValidationComponent","CharComponent","App","Component","state","persons","id","name","age","userName","show","msg","updateUserName","event","setState","target","value","nameChange","personIndex","findIndex","item","person","console","log","toggle","doesShow","deletePerson","splice","inputLength","deleteChar","charIndex","r","join","render","style","backgroundColor","map","i","color","characters","split","char","classes","length","push"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\nimport UserOutput from \"./UserOutput/UserOutput\";\nimport UserInput from \"./UserInput/UserInput\";\nimport ValidationComponent from \"./ValidationComponent/ValidationComponent\";\nimport CharComponent from \"./CharComponent/CharComponent\";\n\nclass App extends React.Component {\n  state = {\n    persons: [\n      { id: 1, name: \"harry\", age: 30 },\n      { id: 2, name: \"garry\", age: 32 },\n      { id: 3, name: \"larry\", age: 38 },\n    ],\n    userName: \"user one\",\n    show: false,\n    msg: \"\",\n  };\n\n  updateUserName = (event) => {\n    this.setState({\n      userName: event.target.value,\n    });\n  };\n\n  nameChange = (event, id) => {\n    // find index of person from state\n    const personIndex = this.state.persons.findIndex((item) => item.id === id);\n    // create one person from index found obj\n    const person = {\n      ...this.state.persons[personIndex],\n    };\n\n    // the name is updated with input value\n    person.name = event.target.value;\n    // copying all persons state\n    const persons = [...this.state.persons];\n    // updating the found index with new person\n    persons[personIndex] = person;\n    console.log(persons);\n    // update state\n    this.setState({ persons });\n  };\n\n  toggle = () => {\n    const doesShow = this.state.show;\n    this.setState({\n      show: !doesShow,\n    });\n  };\n\n  deletePerson = (personIndex) => {\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n\n    this.setState({\n      persons,\n    });\n  };\n\n  inputLength = (event) => {\n    this.setState({\n      msg: event.target.value,\n    });\n  };\n\n  deleteChar = (charIndex) => {\n    console.log(charIndex);\n\n    const r = [...this.state.msg];\n    // remove index\n    r.splice(charIndex, 1);\n    let msg = r.join(\"\");\n\n    this.setState({\n      msg,\n    });\n  };\n\n  render() {\n    const style = {\n      backgroundColor: \"white\",\n      \":hover\": {\n        backgroundColor: \"orange\",\n      },\n    };\n\n    let persons = null;\n\n    if (this.state.show) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, i) => {\n            return (\n              <Person\n                click={() => this.deletePerson(i)}\n                name={person.name}\n                age={person.age}\n                key={person.id}\n                change={(event) => this.nameChange(event, person.id)}\n              />\n            );\n          })}\n        </div>\n      );\n      style[\":hover\"] = {\n        backgroundColor: \"green\",\n        color: \"white\",\n      };\n    }\n    let characters = null;\n    if (this.state.msg) {\n      characters = (\n        <div>\n          {this.state.msg.split(\"\").map((char, i) => {\n            return (\n              <CharComponent\n                char={char}\n                key={i}\n                click={() => this.deleteChar(i)}\n              />\n            );\n          })}\n        </div>\n      );\n    }\n\n    let classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push(\"red\");\n    }\n\n    if (this.state.persons.length <= 1) {\n      classes.push(\"bold\");\n    }\n\n    return (\n  \n        <div className=\"App\">\n          <p className={classes.join(\" \")}>working</p>\n          <input\n            type=\"text\"\n            onChange={(event) => this.inputLength(event)}\n            value={this.state.msg}\n          />\n          {this.state.msg}\n          {characters}\n\n          <ValidationComponent msg={this.state.msg} />\n          <UserOutput userName={this.state.userName} />\n          <UserInput\n            change={this.updateUserName}\n            userName={this.state.userName}\n          />\n          <br></br>\n          <button onClick={this.toggle} style={style}>\n            toggle div\n          </button>\n\n          {persons}\n        </div>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}